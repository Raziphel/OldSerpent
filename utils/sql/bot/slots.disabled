from utils.database import DatabaseConnection
from datetime import datetime as dt, timedelta
import asyncpg

class Slots(object):
    all_slots = {}

    def __init__(self, slot_id:int, user_id:int, bet_amount:int=0, earnings:int=0):
        self.slot_id = slot_id
        self.user_id = user_id
        self.bet_amount = bet_amount
        self.earnings = earnings

        self.all_slots[self.slot_id] = self

    async def save(self, db:DatabaseConnection):
        '''Saves all of the connected user varibles'''
        try:
            await db('''
                INSERT INTO slots
                VALUES
                ($1, $2, $3, $4)
                ''',
                self.slot_id, self.user_id, self.bet_amount, self.earnings
            )
        except asyncpg.exceptions.UniqueViolationError: 
            await db('''
                UPDATE slots SET
                user_id=$2, bet_amount=$3, earnings=$4
                WHERE
                slot_id=$1
                ''',
                self.slot_id, self.user_id, self.bet_amount, self.earning
            )

    @classmethod
    def get(cls, slot_id:int):
        '''Gets level table's connected varibles'''
        user = cls.all_slots.get(slot_id)
        if user == None:
            return cls(slot_id)
        return user

